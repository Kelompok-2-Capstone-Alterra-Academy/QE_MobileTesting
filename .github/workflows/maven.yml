#name: Java CI using Maven
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set Up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: maven
##      - uses: browser-actions/setup-chrome@latest
##      - run: chrome --version
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#      #    - name: Build with Maven
#      #      run: mvn -B clean test
#      - name: Run API test
#        run: mvn clean verify

#name: Java CI using Maven
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Set Up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-maven-
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#      - name: Run API tests
#        run: mvn clean

#name: Java CI using Maven
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    env:
#      MAVEN_OPTS: "--add-opens java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED"
#
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Set Up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-maven-
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#      - name: Run API tests
#        run: mvn clean verify

#
#name: Java CI using Maven
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Set Up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: maven
#      - name: Install Android SDK
#        uses: android-actions/setup-android@v2
#        with:
#          sdk-platform: 'platforms;android-30'
#          ndk-version: 'ndk;21.3.6528147'
#      - name: Set up emulator
#        run: |
#          echo "no" | avdmanager create avd -n test-emulator -k "system-images;android-30;google_apis;x86_64" -f
#          emulator -avd test-emulator -no-window -no-audio &
#          android-wait-for-emulator
#          adb shell input keyevent 82 &
#          echo "emulator.avd=test-emulator" >> $GITHUB_ENV
#          echo "emulator.arguments=-no-window -no-audio" >> $GITHUB_ENV
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#      - name: Run API tests
#        run: mvn clean verify

name: Java CI using Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Install Android SDK
        run: |
          wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O android-sdk.zip
          mkdir $HOME/android-sdk
          unzip -q android-sdk.zip -d $HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-29" >/dev/null
          sdkmanager "emulator" >/dev/null
          sdkmanager "system-images;android-29;google_apis;x86" >/dev/null
          avdmanager create avd --force --name emulator --package "system-images;android-29;google_apis;x86" --abi "google_apis/x86" --device "pixel"
          emulator -avd emulator -no-window -no-audio -no-boot-anim -no-accel &>/dev/null &
          android-wait-for-emulator
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Run API test
        run: mvn clean verify



